{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerbr\\\\OneDrive\\\\Desktop\\\\E-Commerce-website\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { useEffect } from \"react\";\n// import all_product from '../Components/Assets/all_product'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = 0;\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'content-Type': 'application/json'\n        },\n        body: \"\"\n      }).then(response => response.json()).then(data => setCartItems);\n    }\n  }, []);\n  const addToCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: (prev[itemId] || 0) + 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      // Corrected the key here\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          // Corrected the Accept header\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          // Corrected the key here\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: prev[itemId] - 1\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          // Corrected the Accept header\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          // Corrected the key here\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          \"itemId\": itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item];\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item] > 0) {\n        totalItem += cartItems[item];\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetch","then","response","json","data","localStorage","getItem","method","headers","Accept","body","addToCart","itemId","prev","JSON","stringify","console","log","catch","error","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gerbr/OneDrive/Desktop/E-Commerce-website/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useState } from \"react\";\r\n import { useEffect } from \"react\";\r\n// import all_product from '../Components/Assets/all_product'\r\n\r\nexport const ShopContext = createContext(null)\r\n\r\nconst getDefaultCart = ()=>{\r\n    let cart = {};\r\n    for (let index = 0; index < 300+1; index++) {\r\n    cart[index] = 0;\r\n    }\r\n    return cart;\r\n    }\r\n\r\nconst ShopContextProvider =(props)=>{\r\n\r\n    const [all_product, setAll_Product] = useState([])\r\n    \r\n    const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:4000/allproducts')\r\n        .then((response)=>response.json())\r\n        .then((data)=>setAll_Product(data))\r\n        \r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/getcart',{\r\n                method:'POST',\r\n            headers:{\r\n                Accept:'application/form-data',\r\n                'auth-token':`${localStorage.getItem('auth-token')}`,\r\n                'content-Type':'application/json',\r\n            },\r\n            body:\"\",\r\n            }).then((response)=>response.json())\r\n            .then((data)=>setCartItems)\r\n            \r\n        }\r\n    },[])\r\n    \r\n    \r\n\r\n    const addToCart = (itemId) => {\r\n        setCartItems((prev) => ({ ...prev, [itemId]: (prev[itemId] || 0) + 1 }));\r\n    \r\n        if (localStorage.getItem('auth-token')) {  // Corrected the key here\r\n            fetch('http://localhost:4000/addtocart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',  // Corrected the Accept header\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,  // Corrected the key here\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId }),\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => console.log(data))\r\n            .catch((error) => console.error('Error:', error));\r\n        }\r\n    };\r\n    \r\n    const removeFromCart = (itemId) =>{\r\n        setCartItems((prev) => ({...prev, [itemId]: prev[itemId]-1}))\r\n        if(localStorage.getItem('auth-token')){\r\n            fetch('http://localhost:4000/removefromcart', {\r\n                method: 'POST',\r\n                headers: {\r\n                    Accept: 'application/json',  // Corrected the Accept header\r\n                    'auth-token': `${localStorage.getItem('auth-token')}`,  // Corrected the key here\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ \"itemId\": itemId }),\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => console.log(data))\r\n            .catch((error) => console.error('Error:', error));\r\n        }\r\n        }\r\n\r\n        const getTotalCartAmount= () =>{\r\n            let totalAmount=0;\r\n            for(const item in cartItems)\r\n            {\r\n            if(cartItems[item]>0)\r\n            {\r\n                let itemInfo = all_product.find((product)=>product.id===Number(item))\r\n                totalAmount += itemInfo.new_price * cartItems[item]\r\n            }\r\n            \r\n        }return totalAmount;\r\n       \r\n    }\r\n\r\n    const getTotalCartItems = ()=>{\r\n        let totalItem = 0;\r\n        for(const item in cartItems)\r\n            {\r\n                if (cartItems[item]>0)\r\n                {\r\n                    totalItem+=cartItems[item];\r\n                }\r\n    } \r\n    return totalItem\r\n}\r\n\r\n    \r\n        const contextValue = {getTotalCartItems,getTotalCartAmount,all_product, cartItems,addToCart,removeFromCart};\r\n    return (\r\n        <ShopContext.Provider value={contextValue} >\r\n        {props.children}\r\n        </ShopContext.Provider>\r\n    )\r\n}\r\nexport default ShopContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}